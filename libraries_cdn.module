<?php

/**
 * @file
 * Main module file.
 */

/**
 * Implements hook_libraries_info_alter().
 *
 * To get into this hook, add a new key to the library definition in
 * hook_libraries_info().
 *
 * Here's an example:
 *
 * 'cdn' => array(
 *   'aliases' => array('ol3', 'openlayers3'),
 *   'options' => array(
 *     'weight' => 0,
 *     'group' => $js_css_group,
 *   ),
 *   'download' => array(
 *     'versions' => array('3.8.1'),
 *     'plugins' => array(
 *       'cdnjs' => array('3.8.2')
 *       '*' => array('latest')
 *     )
 *   )
 * )
 *
 * - aliases: array, if the library has different names.
 * - options: array, this array will be applied to each file definition,
 *            see drupal_add_TYPE() (js or css) to see which are the keys.
 * - download: array, options to download a local copy of the library
 *   - versions: array, version to download on any CDN when available.
 *   - plugins: array, keys are CDN plugin ids and the special keyword '*' can
 *              be use to specify all CDN plugins. Values are versions to
 *              download when available. The special keyword: 'latest' can be
 *              used to download the latest version available.
 */
function libraries_cdn_libraries_info_alter(&$info) {
  foreach ($info as $library_name => &$library) {
    $variants = array();
    if (isset($library['cdn'])) {
      if (isset($library['cdn']['processed'])) {
        continue;
      }
      $options = $library['cdn'];
      if (!isset($options['options'])) {
        $options['options'] = array();
      }
      if (!isset($options['plugins']) || empty($options['plugins'])) {
        $options['plugins'] = \Drupal\libraries_cdn\LibrariesCDN::getAvailableCDN();
      }

      if (!isset($options['aliases'])) {
        $options['aliases'] = array();
      }
      $options['aliases'] += array($library_name);
      $options['aliases'] = array_unique($options['aliases']);

      foreach ($options['aliases'] as $alias) {
        foreach ($options['plugins'] as $plugin) {
          \Drupal\libraries_cdn\LibrariesCDN::setPlugin($plugin, $alias);
          $variants += \Drupal\libraries_cdn\LibrariesCDN::getLibrariesVariants($options);
        }
      }

      $library['variants'] += $variants;
    }
  }

  $library['cdn']['processed'] = TRUE;
}

/**
 * Function to add a library to a page. This is under heavy development.
 *
 * @param string $library
 *   The library name.
 * @param mixed $cdns
 *   The cdn name or an array of CDN name.
 * @param null $version
 *   The version of the library. If not set it will detect the latest.
 */
function libraries_cdn_add($library, $cdns = array(), $version = NULL) {
  if (is_string($cdns)) {
    $cdns = (array) $cdns;
  }

  if (empty($cdns)) {
    $cdns = \Drupal\libraries_cdn\LibrariesCDN::getAvailableCDN();
  }

  $found = FALSE;

  foreach ($cdns as $cdn) {
    if ($found == TRUE) {
      continue;
    }
    if (\Drupal\libraries_cdn\LibrariesCDN::isAvailableCDN($cdn)) {
      \Drupal\libraries_cdn\LibrariesCDN::setPlugin($cdn, $library);
      if (\Drupal\libraries_cdn\LibrariesCDN::isAvailable()) {

        $user_version = $version ? $version : \Drupal\libraries_cdn\LibrariesCDN::getLatestVersion();

        if ($cache = cache_get($library . ':' . $cdn . ':' . $user_version)) {
          $results = $cache->data;
        }
        else {
          $files = \Drupal\libraries_cdn\LibrariesCDN::getFiles();

          if (isset($files[$user_version])) {
            foreach ((array) $files[$user_version] as $file) {
              $ext = pathinfo($file, PATHINFO_EXTENSION);

              if (strpos($file, 'debug') !== FALSE || strpos($file, 'min') !== FALSE) {
                continue;
              }

              $results[$ext][] = $file;
              $found = TRUE;
            };
            $cache_id = $library . ':' . $cdn . ':' . $user_version;
            cache_set($cache_id, $results);
          }
        }
      }
    }
  }

  if (!empty($results)) {
    foreach ($results as $type => $files) {
      foreach ($files as $file) {
        if ($type == 'js') {
          drupal_add_js($file);
        }
        if ($type == 'css') {
          drupal_add_css($file);
        }
      }
    }
  }
}
